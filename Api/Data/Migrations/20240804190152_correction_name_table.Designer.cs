// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20240804190152_correction_name_table")]
    partial class correction_name_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Context.Model.Assunto", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Cod");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Data.Context.Model.Autor", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Cod");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Data.Context.Model.Livro", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Cod");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Data.Context.Model.LivroAssunto", b =>
                {
                    b.Property<int>("AssuntoCod")
                        .HasColumnType("int");

                    b.Property<int>("LivroCod")
                        .HasColumnType("int");

                    b.HasIndex("AssuntoCod");

                    b.HasIndex("LivroCod");

                    b.ToTable("LivroAssunto");
                });

            modelBuilder.Entity("Data.Context.Model.LivroAutor", b =>
                {
                    b.Property<int?>("AssuntoCod")
                        .HasColumnType("int");

                    b.Property<int>("AutorCod")
                        .HasColumnType("int");

                    b.Property<int>("LivroCod")
                        .HasColumnType("int");

                    b.HasIndex("AssuntoCod");

                    b.HasIndex("LivroCod");

                    b.ToTable("LivroAutor");
                });

            modelBuilder.Entity("Data.Context.Model.LivroAssunto", b =>
                {
                    b.HasOne("Data.Context.Model.Assunto", "Assunto")
                        .WithMany()
                        .HasForeignKey("AssuntoCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.Model.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Data.Context.Model.LivroAutor", b =>
                {
                    b.HasOne("Data.Context.Model.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AssuntoCod");

                    b.HasOne("Data.Context.Model.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });
#pragma warning restore 612, 618
        }
    }
}
